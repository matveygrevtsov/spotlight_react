{"version":3,"sources":["images/donut.png","images/pizza.png","images/banana.png","Spotlight.ts","utils/images.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["spotlightRange","SpotlightItem","props","canvas","image","itemWidth","wrapX0","wrapY0","wrapWidth","wrapHeight","context","t","x","y","width_px","height_px","wrapWidth_px","wrapHeight_px","wrapX0_px","wrapY0_px","this","getContext","calculatePx","getX","getY","width","height","Math","cos","sin","animationSpeed","incrementTime","center_x","center_y","R","min","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","ceil","save","drawImage","renderSpotlight","restore","move","SpotlightAnimator","items","requestAnimation","render","timestamp","clearRect","forEach","item","requestAnimationFrame","setCanvasSize","window","addEventListener","push","cancelAnimationFrame","innerWidth","innerHeight","loadImage","src","Promise","resolve","reject","img","Image","onload","onerror","err","loadImages","arrayOfSrc","a","length","all","map","Spotlight","images","canvasRef","useRef","useEffect","current","spotlightAnimator","then","imgs","addItem","start","destroy","ref","App","image1","image2","image3","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e549a56b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/donut.b4874661.png\";","export default __webpack_public_path__ + \"static/media/pizza.9df49508.png\";","export default __webpack_public_path__ + \"static/media/banana.d9bea2a3.png\";","const FPS = 60;\nconst period_ms = 1 / FPS;\nconst spotlightPower = 1;\nconst animationSpeed = 500;\nconst spotlightRange = 0.2;\nconst spotlightRotationSpeed = 2;\n\ninterface SpotlightItemProps {\n  image: HTMLImageElement;\n  itemWidth: number;\n  wrapX0: number;\n  wrapY0: number;\n  wrapWidth: number;\n  wrapHeight: number;\n  canvas: HTMLCanvasElement;\n}\n\ninterface SpotlightAnimatorProps {\n  canvas: HTMLCanvasElement;\n}\n\nclass SpotlightItem {\n  private readonly canvas: HTMLCanvasElement;\n  private readonly image: HTMLImageElement;\n  private readonly itemWidth: number;\n  private readonly wrapX0: number;\n  private readonly wrapY0: number;\n  private readonly wrapWidth: number;\n  private readonly wrapHeight: number;\n  private readonly context: CanvasRenderingContext2D | null;\n  private t: number;\n  private x: number;\n  private y: number;\n  private width_px: number;\n  private height_px: number;\n  private wrapWidth_px: number;\n  private wrapHeight_px: number;\n  private wrapX0_px: number;\n  private wrapY0_px: number;\n\n  constructor(props: SpotlightItemProps) {\n    this.image = props.image;\n    this.itemWidth = props.itemWidth;\n    this.wrapX0 = props.wrapX0;\n    this.wrapY0 = props.wrapY0;\n    this.wrapWidth = props.wrapWidth;\n    this.wrapHeight = props.wrapHeight;\n    this.canvas = props.canvas;\n    this.context = props.canvas.getContext('2d');\n    this.t = 0;\n    this.width_px = 0;\n    this.height_px = 0;\n    this.wrapHeight_px = 0;\n    this.wrapWidth_px = 0;\n    this.wrapX0_px = 0;\n    this.wrapY0_px = 0;\n    this.calculatePx();\n    this.x = this.getX(this.t);\n    this.y = this.getY(this.t);\n  }\n\n  private calculatePx() {\n    this.wrapX0_px = (this.canvas.width * this.wrapX0) / 100;\n    this.wrapY0_px = (this.canvas.height * this.wrapY0) / 100;\n    this.wrapHeight_px = (this.wrapHeight / 100) * this.canvas.height;\n    this.wrapWidth_px = (this.wrapWidth / 100) * this.canvas.width;\n    this.width_px = (this.itemWidth / 100) * this.canvas.width;\n    this.height_px = (((this.itemWidth / this.image.width) * this.image.height) / 100) * this.canvas.width;\n    if (this.height_px > this.wrapHeight_px) {\n      this.height_px = this.wrapHeight_px;\n      this.width_px = (this.wrapHeight_px * this.image.width) / this.image.height;\n    }\n  }\n\n  private getX(t: number) {\n    return ((this.wrapWidth_px - this.width_px) / 2) * (Math.cos(t) + 1) + this.wrapX0_px;\n  }\n\n  private getY(t: number) {\n    return ((this.wrapHeight_px - this.height_px) / 2) * (Math.sin(t) + 1) + this.wrapY0_px;\n  }\n\n  private incrementTime() {\n    this.t += (animationSpeed * period_ms) / 1000;\n  }\n\n  private move() {\n    this.incrementTime();\n    this.calculatePx();\n    this.x = this.getX(this.t);\n    this.y = this.getY(this.t);\n  }\n\n  private renderSpotlight() {\n    if (!this.context) {\n      return;\n    }\n    const center_x = this.x + this.width_px / 2;\n    const center_y = this.y + this.height_px / 2;\n    const R = Math.min(this.width_px, this.height_px) / 2;\n    const gradient = this.context.createRadialGradient(\n      center_x + R * spotlightRange * Math.cos(this.t * spotlightRotationSpeed),\n      center_y + R * spotlightRange * Math.sin(this.t * spotlightRotationSpeed),\n      R,\n      center_x + R * spotlightRange * Math.cos(this.t * spotlightRotationSpeed),\n      center_y + R * spotlightRange * Math.sin(this.t * spotlightRotationSpeed),\n      0,\n    );\n    gradient.addColorStop(0, '#111111');\n    gradient.addColorStop(1 - spotlightPower, '#111111');\n    gradient.addColorStop(1, 'transparent');\n    this.context.fillStyle = gradient;\n    this.context.fillRect(this.x - 1, this.y - 1, Math.ceil(this.width_px) + 1, Math.ceil(this.height_px) + 1);\n  }\n\n  public render() {\n    if (!this.context) {\n      return;\n    }\n    this.context.save();\n    this.context.drawImage(this.image, this.x, this.y, this.width_px, this.height_px);\n    this.renderSpotlight();\n    this.context.restore();\n    this.move();\n  }\n}\n\nexport default class SpotlightAnimator {\n  public readonly canvas: HTMLCanvasElement;\n  private readonly items: SpotlightItem[];\n  private readonly context: CanvasRenderingContext2D | null;\n  private requestAnimation: number;\n\n  constructor(props: SpotlightAnimatorProps) {\n    this.canvas = props.canvas;\n    this.items = [];\n    this.context = props.canvas.getContext('2d');\n    this.requestAnimation = 0;\n    this.setCanvasSize();\n    window.addEventListener('resize', () => this.setCanvasSize());\n  }\n  public addItem(props: SpotlightItemProps) {\n    this.items.push(new SpotlightItem(props));\n  }\n\n  public start() {\n    this.requestAnimation = requestAnimationFrame(this.render);\n  }\n\n  private render = (timestamp: number): void => {\n    if (!this.context) {\n      return;\n    }\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.items.forEach((item) => item.render());\n    this.requestAnimation = requestAnimationFrame(this.render);\n  };\n\n  public destroy() {\n    cancelAnimationFrame(this.requestAnimation);\n  }\n\n  private setCanvasSize() {\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n}\n","export const loadImage = (src: string): Promise<HTMLImageElement> =>\n  new Promise((resolve, reject) => {\n    const img: HTMLImageElement = new Image();\n    img.src = src;\n    img.onload = () => resolve(img);\n    img.onerror = (err: string | Event) => reject(err);\n  });\n\nexport const loadImages = async (arrayOfSrc: string[] | undefined): Promise<HTMLImageElement[]> => {\n  if (!arrayOfSrc || arrayOfSrc.length === 0) {\n    return [];\n  }\n  return Promise.all(arrayOfSrc.map(loadImage));\n};","import React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport image1 from './images/donut.png';\nimport image2 from './images/pizza.png';\nimport image3 from './images/banana.png';\nimport SpotlightAnimator from './Spotlight';\nimport {loadImages} from './utils/images';\n\ninterface Props {\n  images?: string[];\n}\n\nconst Spotlight: React.FC<Props> = ({images}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    if (canvasRef.current) {\n      const spotlightAnimator = new SpotlightAnimator({canvas: canvasRef.current});\n      loadImages(images).then(imgs => {\n        spotlightAnimator.addItem({\n          canvas: spotlightAnimator.canvas,\n          image: imgs[0],\n          itemWidth: 20,\n          wrapX0: 10,\n          wrapY0: 10,\n          wrapWidth: 30,\n          wrapHeight: 30,\n        });\n        spotlightAnimator.addItem({\n          canvas: spotlightAnimator.canvas,\n          image: imgs[1],\n          itemWidth: 35,\n          wrapX0: 45,\n          wrapY0: 5,\n          wrapWidth: 40,\n          wrapHeight: 60,\n        });\n        spotlightAnimator.addItem({\n          canvas: spotlightAnimator.canvas,\n          image: imgs[0],\n          itemWidth: 5,\n          wrapX0: 90,\n          wrapY0: 20,\n          wrapWidth: 10,\n          wrapHeight: 30,\n        });\n        spotlightAnimator.addItem({\n          canvas: spotlightAnimator.canvas,\n          image: imgs[2],\n          itemWidth: 35,\n          wrapX0: 0,\n          wrapY0: 65,\n          wrapWidth: 50,\n          wrapHeight: 35,\n        });\n        spotlightAnimator.start();\n      });\n      return () => spotlightAnimator.destroy();\n    }\n  }, [images]);\n  return <canvas ref={canvasRef} />;\n};\n\nfunction App() {\n  return <Spotlight images={[image1, image2, image3]} />\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}